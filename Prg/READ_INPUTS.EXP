

(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
PROGRAM Read_Inputs
VAR
	I, J: INT;
	sum : REAL;
	count_imit 		: BOOL;
	power_on_imit 	: BOOL;
	lev_25_imit 	: BOOL;
	lev_50_imit		: BOOL;
	lev_75_imit		: BOOL;
	lev_100_imit	: BOOL;
	BK_nas_imit		: BOOL;
	OSTANOV_imit 	: BOOL;

	sens_EC_imit	: REAL;
	sens_PH_imit	: REAL;
	sens_Trast_imit	: REAL;
	sens_Pnas_imit	: REAL;
END_VAR
(* @END_DECLARATION := '0' *)
(*Дискретные выходы*********************************************************************************************)
IF fIMIT THEN
DI_BUF.0:=count_imit;
DI_BUF.1:=power_on_imit;
DI_BUF.2:=lev_25_imit;
DI_BUF.3:=lev_50_imit;
DI_BUF.4:=lev_75_imit;
DI_BUF.5:=lev_100_imit;
DI_BUF.6:=BK_nas_imit;
DI_BUF.7:=OSTANOV_imit;
ELSE
DI_BUF.0:=count;
DI_BUF.1:=power_on;
DI_BUF.2:=lev_25;
DI_BUF.3:=lev_50;
DI_BUF.4:=lev_75;
DI_BUF.5:=lev_100;
DI_BUF.6:=BK_nas;
DI_BUF.7:=OSTANOV;
END_IF

FOR I:=0 TO CountDI-1 DO
	DI_ARRAY[I].inVal:= WORD_TO_BOOL(DI_BUF AND 1);
	DI_BUF:=ROR(DI_BUF,1);
	IF	DI_ARRAY[I].inVal<>DI_ARRAY[I].outVal AND DI_ARRAY[I].timeDreb = T#0ms THEN
		DI_ARRAY[I].outVal:=DI_ARRAY[I].inVal;
	ELSIF	DI_ARRAY[I].inVal<>DI_ARRAY[I].outVal AND DI_ARRAY[I].timeDreb <> T#0ms THEN
		DI_ARRAY[I].TimerDreb(IN:=TRUE, PT:=DI_ARRAY[I].timeDreb);
		IF DI_ARRAY[I].TimerDreb.Q THEN
			DI_ARRAY[I].outVal:=DI_ARRAY[I].inVal;
			DI_ARRAY[I].TimerDreb(IN:=FALSE, PT:=DI_ARRAY[I].timeDreb);
		END_IF
	ELSE
		DI_ARRAY[I].TimerDreb(IN:=FALSE, PT:=DI_ARRAY[I].timeDreb);
	END_IF
	DI_ARRAY[i].outVal_inv:= NOT DI_ARRAY[i].outVal;
END_FOR



(*Аналоговые входы*********************************************************************************************)
IF fIMIT THEN
AI_BUF[0]:=sens_EC_imit;
AI_BUF[1]:=sens_PH_imit;
AI_BUF[2]:=sens_Trast_imit;
AI_BUF[3]:=sens_Pnas_imit;
ELSE
AI_BUF[0]:=sens_EC;
AI_BUF[1]:=sens_PH;
AI_BUF[2]:=sens_Trast;
AI_BUF[3]:=sens_Pnas;
END_IF


FOR I:=0 TO CountAI-1 DO
(*Проверка на изменение числа выборок для усреднения, если изм. то чситаем заново*)
	IF AI_ARRAY[I].private.last_n <> AI_ARRAY[I].n_Filtr THEN
		AI_ARRAY[I].private.b_Complete:=FALSE;
		AI_ARRAY[I].private.last_n:=AI_ARRAY[I].n_Filtr;
		FOR J:=0 TO 32-1 DO
			AI_ARRAY[I].private.arr_inputs[i] := 0;
		END_FOR
	END_IF


	AI_ARRAY[I].private.TimerFiltr(IN:=TRUE, PT:=AI_ARRAY[I].TimeFiltr);
	(*выборка по таймеру*)
	IF AI_ARRAY[I].private.TimerFiltr.Q THEN
		AI_ARRAY[I].private.arr_inputs[AI_ARRAY[I].private.ind] := AI_BUF[i];
		AI_ARRAY[I].private.ind:= 	AI_ARRAY[I].private.ind + 1;
		AI_ARRAY[I].private.TimerFiltr(IN:=FALSE, PT:=AI_ARRAY[I].TimeFiltr);
	END_IF
	IF 	AI_ARRAY[I].private.ind >=  AI_ARRAY[I].n_Filtr THEN
		AI_ARRAY[I].private.ind:=0;
		AI_ARRAY[I].private.b_Complete:=TRUE;
	END_IF
	(*Если уже необходимое кол-во то высчитываем результат*)
	IF 	AI_ARRAY[I].private.b_Complete THEN
		sum:=0;
		FOR J:=0 TO AI_ARRAY[I].n_Filtr -1  DO
			sum:=sum +	AI_ARRAY[I].private.arr_inputs[i];
		END_FOR
			AI_ARRAY[I].private.tempVal  :=sum / AI_ARRAY[I].n_Filtr;
			AI_ARRAY[I].private.b_Complete:=FALSE;
	END_IF
	(*Преобразование к границам*)
	AI_ARRAY[I].outVal:=(AI_ARRAY[I].min_fiz*AI_ARRAY[I].private.MaxACP-AI_ARRAY[I].max_fiz*AI_ARRAY[I].private.MinACP)/(AI_ARRAY[I].private.MaxACP-AI_ARRAY[I].private.MinACP)+((AI_ARRAY[I].max_fiz-AI_ARRAY[I].min_fiz)/(AI_ARRAY[I].private.MaxACP-AI_ARRAY[I].private.MinACP))*AI_ARRAY[I].private.tempVal;
END_FOR

END_PROGRAM
