

(* @NESTEDCOMMENTS := 'Yes' *)
(* @PATH := '' *)
(* @OBJECTFLAGS := '0, 8' *)
(* @SYMFILEFLAGS := '2048' *)
FUNCTION_BLOCK fbPump
VAR_INPUT
	on : BOOL;
	off : BOOL;
	block : BOOL; (*Блокировка пуска*)
	reset : BOOL; (*Сброс аварии*)
END_VAR
VAR_OUTPUT
	status : BOOL; (*Включен/Выключен*)
	avar : WORD; (*Тип аварии 0 - нет аварии, .0 - Нет сигнала от пускателя, .1 - нет давления , .2 - логическая блокировка*)
	warn : WORD; (*Предупреждение 0 нет предупреждения, .0 - Две команды ON OFF*)
END_VAR
VAR
	state : WORD;		(*0- откл, 1-пуск,  2-работа 3-блокировка*)
	timerOnPump : TON;
	PTOnPump : TIME := T#3s;
	di_BK_pump : POINTER TO BOOL;
	do_pump_actVal : POINTER TO BOOL;
	do_pump_newVal : POINTER TO BOOL;
	ai_Ppump : POINTER TO REAL;
	sp_PavarPump : POINTER TO REAL;
	r_trig_on : R_TRIG;
	r_trig_off : R_TRIG;

END_VAR
(* @END_DECLARATION := '0' *)
di_BK_pump := ADR(DI_ARRAY[6].outVal);
do_pump_actVal:=ADR(DO_ARRAY[0].fActVal);
do_pump_newVal:=ADR(DO_ARRAY[0].fNewVal);
ai_Ppump:= ADR(AI_ARRAY[3].outVal);
(*sp_PavarPump:=*)
r_trig_on(CLK:= on);
r_trig_off(CLK:= off);
IF block THEN
	do_pump_actVal^:=TRUE ; do_pump_newVal^:= FALSE;
	state :=3;
	avar.2:= TRUE;
END_IF
IF ON AND OFF THEN
	warn.0 :=TRUE;
END_IF
CASE state OF
	0:	IF r_trig_on.Q  THEN	(*Вкл насос по команде*)
			state :=1;
			do_pump_actVal^:=TRUE ; do_pump_newVal^:= TRUE;	(*Вкл насос*)
		END_IF

	1:	timerOnPump(IN:=TRUE, PT:=PTOnPump); (*Пуск насоса, не отслеживаем пускатель и давление*)
		IF timerOnPump.Q  THEN
			state:=2;
			timerOnPump(IN:=FALSE, PT:=PTOnPump);
		END_IF

	2:	IF NOT di_BK_pump^ OR ai_Ppump^ < sp_PavarPump^ THEN (*Если нет пускателя или давление ниже минимального аварийного то блокировка насоса*)
			state :=3;
			avar.0 := NOT di_BK_pump^;
			avar.1 :=  ai_Ppump^ < sp_PavarPump^;
			do_pump_actVal^:=TRUE ; do_pump_newVal^:= FALSE; (*Откл насос*)
		END_IF

		IF r_trig_off.Q THEN	(*Откл насос по команде*)
			state:=0;
			do_pump_actVal^:=TRUE ; do_pump_newVal^:= FALSE; (*Откл насос*)
		END_IF

		(*Насос заблокирован*)
	3: 	IF reset THEN
			state := 0;
			avar:= 0;
			warn:=0;
		END_IF


END_CASE



END_FUNCTION_BLOCK
